package co.kh.dev.home.action.shop;

import java.io.IOException;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import co.kh.dev.home.action.Action;
import co.kh.dev.home.control.ActionForward;

public class ShopCartSelectAction implements Action {
	@Override
	public ActionForward execute(HttpServletRequest request, HttpServletResponse response) throws IOException {
		HttpSession session = request.getSession(false);

		String userId = (String) session.getAttribute("id");
		if (userId == null) {
		    ActionForward forward = new ActionForward(request.getContextPath() + "/loginPage.do", true);
		    return forward;
		}

		String newProductNo = request.getParameter("no");
		if (newProductNo == null || newProductNo.isEmpty()) {
		    ActionForward forward = new ActionForward(request.getContextPath() + "/errorPage.do?error=missingProductNo", true);
		    return forward;
		}

		// 쿠키 리스트에서 사용자의 ID를 키로 검색
		Cookie[] cookies = request.getCookies();
		String existingCart = ""; // 기존 장바구니 데이터
		if (cookies != null) {
		    for (Cookie cookie : cookies) {
		        if (cookie.getName().equals(userId)) {
		            existingCart = cookie.getValue(); // 기존 쿠키 값 가져오기
		            break;
		        }
		    }
		}

		// 새로운 쿠키 값 생성
		String newCart = existingCart+","+newProductNo;
		Cookie cartCookie = new Cookie(userId, newCart);
		cartCookie.setMaxAge(7 * 24 * 60 * 60);
		response.addCookie(cartCookie);
		// 장바구니 추가 성공 후 리다이렉트
		ActionForward forward = new ActionForward(request.getContextPath() + "/shopPageAlert.do?type="+request.getParameter("type")+"&status=4", true);
		return forward;
	}

}
