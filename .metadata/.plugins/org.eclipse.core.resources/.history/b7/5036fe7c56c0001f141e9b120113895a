package co.kh.dev.home.action.shop;

import java.io.File;
import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import co.kh.dev.home.action.Action;
import co.kh.dev.home.control.ActionForward;
import co.kh.dev.home.model.ShopDAO;
import co.kh.dev.home.model.ShopImgDAO;
import co.kh.dev.home.model.ShopImgVO;
import co.kh.dev.home.model.ShopVO;

@MultipartConfig(fileSizeThreshold = 1024 * 1024 * 2, // 2MB
		maxFileSize = 1024 * 1024 * 10, // 10MB
		maxRequestSize = 1024 * 1024 * 50 // 50MB
)
public class ShopInsertAction implements Action {
	private static final String UPLOAD_DIRECTORY = "uploads";

	@Override
	public ActionForward execute(HttpServletRequest request, HttpServletResponse response) throws IOException {
		 // 업로드 경로 설정
	    String typeStr = request.getParameter("type");
	    String productNoStr = request.getParameter("productNo");
	    String title = request.getParameter("title");
	    String content = request.getParameter("content");
	    System.out.println("type: " + typeStr);
	    System.out.println("productNo: " + productNoStr);
	    System.out.println("title: " + title);
	    System.out.println("content: " + content);

	    
		ShopDAO sDAO = ShopDAO.getInstance();
		ShopImgDAO siDAO = ShopImgDAO.getInstance();
		ShopVO svo = new ShopVO(Integer.parseInt(request.getParameter("type")),Integer.parseInt(request.getParameter("productNo")),request.getParameter("title"),request.getParameter("content"));
		sDAO.insertDB(svo);
		svo=sDAO.selectLastDB();
		String uploadPath =request.getServletContext().getRealPath("") + File.separator + UPLOAD_DIRECTORY;
        File uploadDir = new File(uploadPath);
        if (!uploadDir.exists()) {
            uploadDir.mkdir();
        }

        // 파일 저장 처리
        int contentFileIndex = 1; // CONTENT 파일 순서
        int titleFileIndex = 1;   // TITLE 파일 순서

        try {
			for (Part part : request.getParts()) {
			    if (part.getName().equals("contentImgs")) { // 다중 파일 (CONTENT)
			        String fileName = svo.getNo() + "_content_" + contentFileIndex + "_" + extractFileName(part);
			        String filePath = uploadPath + File.separator + fileName;
			        ShopImgVO sivo = new ShopImgVO("CONTENT", svo.getNo(), filePath);
			        siDAO.insertDB(sivo); // DB에 삽입
			        part.write(filePath); // 파일 저장
			        contentFileIndex++;
			    } else if (part.getName().equals("titleImg")) { // 단일 파일 (TITLE)
			        String fileName = svo.getNo() + "_title_" + titleFileIndex + "_" + extractFileName(part);
			        String filePath = uploadPath + File.separator + fileName;
			        ShopImgVO sivo = new ShopImgVO("TITLE", svo.getNo(), filePath);
			        siDAO.insertDB(sivo); // DB에 삽입
			        part.write(filePath); // 파일 저장
			        titleFileIndex++;
			    }else if (part.getName().equals("title")) { // 텍스트 데이터
			        String title = new String(part.getInputStream().readAllBytes(), StandardCharsets.UTF_8);
			        System.out.println("Title: " + title);
			    } else if (part.getName().equals("content")) { // 텍스트 데이터
			        String content = new String(part.getInputStream().readAllBytes(), StandardCharsets.UTF_8);
			        System.out.println("Content: " + content);
			    } else if (part.getName().equals("titleImg")) { // 파일 데이터
			        String fileName = extractFileName(part);
			        System.out.println("File Name: " + fileName);}
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ServletException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ActionForward forward = new ActionForward("/shopSelect.do?type="+svo.getType(), false);
		return forward;
	}
	
	private String extractFileName(Part part) {
	    String contentDisp = part.getHeader("content-disposition");
	    for (String content : contentDisp.split(";")) {
	        if (content.trim().startsWith("filename")) {
	            return content.substring(content.indexOf("=") + 2, content.length() - 1); // 파일명 추출
	        }
	    }
	    return "unknown"; // 파일명이 없으면 기본값
	}
}
