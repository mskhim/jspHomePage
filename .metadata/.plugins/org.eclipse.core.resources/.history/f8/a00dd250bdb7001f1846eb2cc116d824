package co.kh.dev.home.model;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import co.kh.dev.common.ConnectionPool;

public class CustomerDAO {
	ConnectionPool cp = ConnectionPool.getInstance();
	String INSERT_SQL = "INSERT INTO CUSTOMER VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

    // 데이터 삽입 메서드
    public boolean insertDB(CustomerVO cvo) {
    		Connection con = cp.getConnection();
    		int rs = 0;
    		try {
            PreparedStatement pstmt = con.prepareStatement(INSERT_SQL);
            pstmt.setString(1, cvo.getId());
            pstmt.setString(2, cvo.getPwd());
            pstmt.setString(3, cvo.getName());
            pstmt.setString(4, cvo.getNickname());
            pstmt.setString(5, cvo.getEmail());
            pstmt.setString(6, cvo.getTel());
            pstmt.setString(7, cvo.getPhone());
            pstmt.setDate(8, new java.sql.Date(cvo.getBirth().getTime()));
            pstmt.setString(9, cvo.getZipcode());
            pstmt.setString(10, cvo.getAddress1());
            pstmt.setString(11, cvo.getAddress2());
				rs = pstmt.executeUpdate();
			} catch (SQLException e) {
				e.printStackTrace();
			}
            return (rs!=0)?true:false // 성공 여부 반환
       
    }

    // ID 중복 체크 메서드
    public boolean isIdDuplicate(CustomerVO cvo) {
        String sql = "SELECT COUNT(*) FROM CUSTOMER WHERE ID = ?";

        try (Connection conn = ConnectionPool.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, cvo.getId());

            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    return rs.getInt(1) > 0; // ID가 존재하면 true 반환
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false; // 중복되지 않으면 false 반환
    }
}
