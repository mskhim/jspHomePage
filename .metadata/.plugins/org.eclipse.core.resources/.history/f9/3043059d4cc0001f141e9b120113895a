package co.kh.dev.home.model;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import co.kh.dev.common.ConnectionPool;

public class ShopImgDAO {
    private static ShopImgDAO instance = new ShopImgDAO();
    ConnectionPool cp = ConnectionPool.getInstance();

    private final String INSERT_SQL = "INSERT INTO SHOP_IMG (NO, TYPE, SHOP_NO, URL) VALUES ((SELECT NVL(MAX(NO), 0) + 1 FROM SHOP_IMG), ?, ?, ?)";
    private final String SELECT_SQL = "SELECT * FROM SHOP_IMG ORDER BY NO DESC";
    private final String UPDATE_SQL = "UPDATE SHOP_IMG SET TYPE = ?, SHOP_NO = ?, URL = ? WHERE NO = ?";
    private final String DELETE_SQL = "DELETE FROM SHOP_IMG WHERE NO = ?";

    private ShopImgDAO() {}

    public static ShopImgDAO getInstance() {
        return instance;
    }

    public boolean insertDB(ShopImgVO pvo) {
        Connection con = cp.getConnection();
        PreparedStatement pstmt = null;
        int result = 0;
        try {
            pstmt = con.prepareStatement(INSERT_SQL);
            pstmt.setString(1, pvo.getType());
            pstmt.setInt(2, pvo.getShopNo());
            pstmt.setString(3, pvo.getUrl());
            result = pstmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            cp.dbClose(con, pstmt);
        }
        return result > 0;
    }

    public ArrayList<ShopImgVO> selectDB() {
        Connection con = cp.getConnection();
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        ArrayList<ShopImgVO> shopImgList = new ArrayList<>();
        try {
            pstmt = con.prepareStatement(SELECT_SQL);
            rs = pstmt.executeQuery();
            while (rs.next()) {
                ShopImgVO pvo = new ShopImgVO(
                    rs.getInt("NO"),
                    rs.getString("TYPE"),
                    rs.getInt("SHOP_NO"),
                    rs.getString("URL")
                );
                shopImgList.add(pvo);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            cp.dbClose(con, rs, pstmt);
        }
        return shopImgList;
    }

    // UPDATE
    public boolean updateShopImg(ShopImgVO pvo) {
        Connection con = cp.getConnection();
        PreparedStatement pstmt = null;
        int result = 0;
        try {
            pstmt = con.prepareStatement(UPDATE_SQL);
            pstmt.setString(1, pvo.getType());
            pstmt.setInt(2, pvo.getShopNo());
            pstmt.setString(3, pvo.getUrl());
            pstmt.setInt(4, pvo.getNo());
            result = pstmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            cp.dbClose(con, pstmt);
        }
        return result > 0;
    }

    // DELETE
    public boolean deleteShopImg(int no) {
        Connection con = cp.getConnection();
        PreparedStatement pstmt = null;
        int result = 0;
        try {
            pstmt = con.prepareStatement(DELETE_SQL);
            pstmt.setInt(1, no);
            result = pstmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            cp.dbClose(con, pstmt);
        }
        return result > 0;
    }
}

