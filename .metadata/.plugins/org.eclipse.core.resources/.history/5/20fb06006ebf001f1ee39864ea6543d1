package co.kh.dev.home.action.mainPage;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import co.kh.dev.home.action.Action;
import co.kh.dev.home.control.ActionForward;
import co.kh.dev.home.model.BoardDAO;
import co.kh.dev.home.model.BoardVO;
import co.kh.dev.home.model.NoticeDAO;
import co.kh.dev.home.model.NoticeVO;

public class mainPageSelectAction implements Action {

	@Override
	public ActionForward execute(HttpServletRequest request, HttpServletResponse response) throws IOException {
		HttpSession session = request.getSession(false);	
		Cookie[] cookies = request.getCookies();
			String cid = null;
			if (cookies != null) {
				for (Cookie cookie : cookies) {
					if ("id".equals(cookie.getName())) {
						cid = cookie.getValue();
						session.setAttribute("cid", cid);
						break;
					}
				}
			}
		BoardDAO bDAO = BoardDAO.getInstance();
		int viewTime = 5; // 한페이지에 보여줄 리스트 개수
		int recordCount = bDAO.selectRecordDB(); // 전체 리스트 개수 findText값이 있을시 해당 항목으로 변경
		int startListNum = (recordCount - viewTime < 0) ? 1 : recordCount - viewTime; // 출력할 리스트번호 시작
		int endListNum = recordCount; // 출력할 리스트번호 마지막
		ArrayList<BoardVO> bList = bDAO.selectDB(startListNum, endListNum);// 원하는 구간의 db를 출력
		request.setAttribute("bList", bList);
		// 공지사항
		NoticeDAO nDAO = NoticeDAO.getInstance();
		int nviewTime = 3; // 한페이지에 보여줄 리스트 개수
		int nrecordCount = nDAO.selectRecordDB(); // 전체 리스트 개수 findText값이 있을시 해당 항목으로 변경
		int nstartListNum = (nrecordCount - nviewTime < 0) ? 1 : nrecordCount - nviewTime; // 출력할 리스트번호 시작
		int nendListNum = nrecordCount; // 출력할 리스트번호 마지막
		ArrayList<NoticeVO> nList = nDAO.selectDB(nstartListNum, nendListNum);// 원하는 구간의 db를 출력
		request.setAttribute("nList", nList);

		ActionForward forward = new ActionForward("/mainPageAlert.do", false);
		return forward;
	}

}
