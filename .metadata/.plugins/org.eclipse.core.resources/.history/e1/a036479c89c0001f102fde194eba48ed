package co.kh.dev.home.action.shop;

import java.io.IOException;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import co.kh.dev.home.action.Action;
import co.kh.dev.home.control.ActionForward;

public class ShopCartSelectAction implements Action {
	@Override
	public ActionForward execute(HttpServletRequest request, HttpServletResponse response) throws IOException {
		  HttpSession session = request.getSession(false);
	        if (session == null || session.getAttribute("id") == null) {
	            // 로그인 정보가 없으면 401 에러 반환
				ActionForward forward = new ActionForward(request.getContextPath()+"/mainPageAlert.do?status=", true);
				return forward;
	        }

	        String userId = (String) session.getAttribute("id");

	        // 쿠키에서 장바구니 데이터 읽기
	        Cookie[] cookies = request.getCookies();
	        String cartData = "";
	        if (cookies != null) {
	            for (Cookie cookie : cookies) {
	                if (cookie.getName().equals(userId)) {
	                    cartData = cookie.getValue();
	                    break;
	                }
	            }
	        }

	        // 쿠키 데이터가 비어 있는 경우 빈 리스트 반환
	        if (cartData.isEmpty()) {
	            response.setContentType("application/json; charset=UTF-8");
	            PrintWriter out = response.getWriter();
	            out.write("[]"); // 빈 JSON 배열
	            out.flush();
	            return;
	        }

	        // 상품 번호 리스트로 변환
	        String[] productNos = cartData.split(",");

	        // ShopDAO를 이용하여 상품 정보를 가져옴
	        ShopDAO sDAO = ShopDAO.getInstance();
	        List<ShopVO> products = new ArrayList<>();
	        for (String productNo : productNos) {
	            try {
	                int no = Integer.parseInt(productNo.trim());
	                ShopVO svo = new ShopVO();
	                svo.setNo(no);
	                ShopVO product = sDAO.selectByNoDB(svo);
	                if (product != null) {
	                    products.add(product);
	                }
	            } catch (NumberFormatException e) {
	                // 유효하지 않은 상품 번호는 무시
	                e.printStackTrace();
	            }
	        }
			ActionForward forward = new ActionForward("/shopSelect.do?type="+type, false);
			return forward;
	}

}
