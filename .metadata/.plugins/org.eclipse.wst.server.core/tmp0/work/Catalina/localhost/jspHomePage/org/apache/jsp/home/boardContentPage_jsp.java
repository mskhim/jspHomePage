/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2024-12-18 09:11:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.home;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import co.kh.dev.home.model.CommentDAO;
import co.kh.dev.home.model.CommentVO;
import co.kh.dev.home.model.BoardDAO;
import co.kh.dev.home.model.BoardVO;
import java.util.ArrayList;
import co.kh.dev.common.MyUtility;
import co.kh.dev.home.model.CustomerVO;

public final class boardContentPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/home/footer.jsp", Long.valueOf(1733897706878L));
    _jspx_dependants.put("/home/headerNav.jsp", Long.valueOf(1734499137981L));
    _jspx_dependants.put("/home/css/commonCss.jsp", Long.valueOf(1734337424577L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(10);
    _jspx_imports_classes.add("co.kh.dev.home.model.CommentDAO");
    _jspx_imports_classes.add("co.kh.dev.common.MyUtility");
    _jspx_imports_classes.add("co.kh.dev.home.model.CustomerVO");
    _jspx_imports_classes.add("co.kh.dev.home.model.CommentVO");
    _jspx_imports_classes.add("co.kh.dev.home.model.BoardVO");
    _jspx_imports_classes.add("co.kh.dev.home.model.BoardDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

CustomerVO cvo = MyUtility.returnCvoBySession(session);
ArrayList<CommentVO> cmList = (ArrayList<CommentVO>) request.getAttribute("cmList");
BoardVO bvo = (BoardVO) request.getAttribute("bvo");
if (bvo == null) {
	response.sendRedirect("/jspHomePage/home/boardPage.jsp");
}
String msg=(String)request.getAttribute("msg");
boolean alertFlag=(request.getAttribute("alertFlag")==null)?false:(boolean)request.getAttribute("alertFlag");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>메인 화면</title>\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/6ff644124c.js\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"");
      out.print(request.getContextPath());
      out.write("/home/css/carouselSection.css\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"");
      out.print(request.getContextPath());
      out.write("/home/css/common.css\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"");
      out.print(request.getContextPath());
      out.write("/home/css/headerNav.css\" />");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"");
      out.print(request.getContextPath());
      out.write("/home/css/boardContentPage.css\" />\r\n");
      out.write("	");

if(alertFlag){

      out.write("	\r\n");
      out.write("<script>\r\n");
      out.write("alert(\"");
      out.print(msg);
      out.write("\");\r\n");
      out.write("window.location.replace(\"");
      out.print(request.getContextPath());
      out.write("/boardListSelect.do?no=");
      out.print(bvo.getNo());
      out.write("\");\r\n");
      out.write("</script>\r\n");

}

      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		<nav class=\"headerNav\">\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"headerNav\">\r\n");
      out.write("      <i class=\"fa-solid fa-cat\" onClick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/home/mainPage.jsp'\"></i>\r\n");
      out.write("	<ul class=\"mainMenu\">\r\n");
      out.write("		<li data-menu=\"one\">Item One</li>\r\n");
      out.write("		<li data-menu=\"two\">Item Two</li>\r\n");
      out.write("		<li data-menu=\"three\">Item Three</li>\r\n");
      out.write("		<li data-menu=\"four\">고객 지원</li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	");

  CustomerVO cvo2 = MyUtility.returnCvoBySession(session);
  if(cvo2==null){
  
      out.write("\r\n");
      out.write("	<button class=\"Button\" class=\"authButton\" onClick=\"openLoginPopup();\">로그인</button>\r\n");
      out.write("	");

  } else{
  
      out.write("\r\n");
      out.write("	<button class=\"Button\" class=\"authButton\" onClick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/home/logout.jsp'\">로그아웃</button>\r\n");
      out.write("	");

  }
  
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"subMenuContainer\">\r\n");
      out.write("	<ul class=\"subMenu\" data-submenu=\"one\">\r\n");
      out.write("		<li><a href=\"#\">Submenu 1</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu 2</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu 3</a></li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	<ul class=\"subMenu\" data-submenu=\"two\">\r\n");
      out.write("		<li><a href=\"#\">Submenu A</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu B</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu C</a></li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	<ul class=\"subMenu\" data-submenu=\"three\">\r\n");
      out.write("		<li><a href=\"#\">Submenu X</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu Y</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu Z</a></li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	<ul class=\"subMenu\" data-submenu=\"four\">\r\n");
      out.write("		<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/boardSelect.do\">게시판</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu Beta</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu Gamma</a></li>\r\n");
      out.write("	</ul>\r\n");
      out.write("</div>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/home/js/headerNav.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/home/js/common.js\"></script>");
      out.write("\r\n");
      out.write("		</nav>\r\n");
      out.write("	</header>\r\n");
      out.write("	<main class=\"boardContentPage\">\r\n");
      out.write("		<section class=\"boardView\">\r\n");
      out.write("			<h2>게시글 상세 조회</h2>\r\n");
      out.write("			<!-- 게시글 상세 정보 -->\r\n");
      out.write("			<div class=\"postDetail\">\r\n");
      out.write("				<table>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>제목</th>\r\n");
      out.write("						<td id=\"postTitle\">");
      out.print(bvo.getTitle());
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>글쓴이</th>\r\n");
      out.write("						<td id=\"postWriter\">");
      out.print(bvo.getCustomerId());
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>작성일</th>\r\n");
      out.write("						<td id=\"postDate\">");
      out.print(bvo.getSubdate());
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>조회수</th>\r\n");
      out.write("						<td id=\"postDate\">");
      out.print(bvo.getCount());
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("				<div id=\"postContent\">");
      out.print(bvo.getContent());
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("				<div\r\n");
      out.write("					class=");
      out.print((cvo != null && bvo.getCustomerId().equals(cvo.getId())) ? "postActions" : "dispNone");
      out.write(">\r\n");
      out.write("					<form method=\"post\"\r\n");
      out.write("						action=\"/jspHomePage/home/boardContentModifyPage.jsp\">\r\n");
      out.write("						<input type=\"hidden\" name=\"no\" value=\"");
      out.print(bvo.getNo());
      out.write("\"> <input\r\n");
      out.write("							type=\"hidden\" name=\"title\" value=\"");
      out.print(bvo.getTitle());
      out.write("\"> <input\r\n");
      out.write("							type=\"hidden\" name=\"content\" value=\"");
      out.print(bvo.getContent());
      out.write("\">\r\n");
      out.write("						<button type=\"submit\" class=\"editBtn\">수정</button>\r\n");
      out.write("					</form>\r\n");
      out.write("					<button type=\"button\" class=\"deleteBtn\"\r\n");
      out.write("						onclick=\"deletePost(");
      out.print(bvo.getNo());
      out.write(")\">삭제</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</section>\r\n");
      out.write("\r\n");
      out.write("		<!-- 댓글 작성 폼 -->\r\n");
      out.write("		<section class=\"commentForm");
      out.print((cvo != null) ? "" : " dispNone");
      out.write("\">\r\n");
      out.write("			<h3>댓글 작성</h3>\r\n");
      out.write("			<form method=\"post\" action=\"/jspHomePage/boardCommentInsert.do\">\r\n");
      out.write("				<input type=\"hidden\" name=\"boardNo\" value=\"");
      out.print(bvo.getNo());
      out.write("\" />\r\n");
      out.write("				<textarea name=\"content\" placeholder=\"댓글을 입력하세요\" required></textarea>\r\n");
      out.write("				<button type=\"submit\">댓글 작성</button>\r\n");
      out.write("			</form>\r\n");
      out.write("		</section>\r\n");
      out.write("\r\n");
      out.write("		<!-- 댓글 목록 (대댓글 포함) -->\r\n");
      out.write("		<section class=\"commentList\">\r\n");
      out.write("			<h3>댓글 목록</h3>\r\n");
      out.write("\r\n");
      out.write("			");

			/*  List<CommentVO> comments = (List<CommentVO>) request.getAttribute("comments"); */
			for (CommentVO cmvo : cmList) {
				String indent = "margin-left: " + (cmvo.getDepth() * 30) + "px;";
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<!-- 댓글 블록 -->\r\n");
      out.write("			<div class=\"comment\" style=\"");
      out.print(indent);
      out.write("\">\r\n");
      out.write("				<p class=\"commentInfo\">\r\n");
      out.write("					<strong>");
      out.print(cmvo.getCustomerId());
      out.write("</strong> <span\r\n");
      out.write("						class=\"commentDate\">");
      out.print(cmvo.getSubdate());
      out.write("</span>\r\n");
      out.write("				</p>\r\n");
      out.write("				<p class=\"commentContent\">");
      out.print(cmvo.getContent());
      out.write("</p>\r\n");
      out.write("				<div class=\"commentActions");
      out.print((cvo != null) ? "" : " dispNone");
      out.write("\">\r\n");
      out.write("					<button class=\"commentReplyBtn\"\r\n");
      out.write("						onclick=\"toggleDisp('togle");
      out.print(cmvo.getNo());
      out.write("');\">답글</button>\r\n");
      out.write("					<button\r\n");
      out.write("						class=\"commentEditBtn ");
      out.print((cvo != null && cmvo.getCustomerId().equals(cvo.getId())) ? "" : " dispNone");
      out.write("\">수정</button>\r\n");
      out.write("					<button\r\n");
      out.write("						class=\"commentDeleteBtn ");
      out.print((cvo != null && cmvo.getCustomerId().equals(cvo.getId())) ? "" : " dispNone");
      out.write("\">삭제</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"reCommentForm dispNone\" id=\"togle");
      out.print(cmvo.getNo());
      out.write("\">\r\n");
      out.write("				<form action=\"/jspHomePage/boardCommentInsert.do\" method=\"post\">\r\n");
      out.write("					<input type=\"hidden\" name=\"boardNo\" value=\"");
      out.print(bvo.getNo());
      out.write("\" /> <input\r\n");
      out.write("						type=\"hidden\" name=\"parentNo\" value=\"");
      out.print(cmvo.getNo());
      out.write("\" /> <input\r\n");
      out.write("						type=\"hidden\" name=\"depth\" value=\"");
      out.print(cmvo.getDepth());
      out.write("\" />\r\n");
      out.write("					<textarea name=\"content\" placeholder=\"답글을 입력하세요\" required></textarea>\r\n");
      out.write("					<button type=\"submit\">작성</button>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("		</section>\r\n");
      out.write("		<div class=\"toList\">\r\n");
      out.write("			<button onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/home/boardPage.jsp'\">목록으로</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</main>\r\n");
      out.write("\r\n");
      out.write("	<hr>\r\n");
      out.write("	<footer>\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("      <article>\r\n");
      out.write("        <div><a href=\"#\">로그인 | </a><a href=\"#\">전체서비스 | </a><a href=\"#\">서비스안내 | </a><a href=\"#\">오류신고 | </a><a href=\"#\">고객센터 | </a></div>\r\n");
      out.write("        <div>직접 콘텐츠를 편집합니다.</div>\r\n");
      out.write("        <div>이 콘텐츠의 저작권은 저작권자 또는 제공처에 있으며, 이를 무단 이용하는 경우 저작권법 등에 따라 법적 책임을 질 수 있습니다.</div>\r\n");
      out.write("      </article>");
      out.write("\r\n");
      out.write("	</footer>\r\n");
      out.write("	<script src=\"");
      out.print(request.getContextPath());
      out.write("/home/js/boardContentPage.js\"></script>\r\n");
      out.write("	<script src=\"");
      out.print(request.getContextPath());
      out.write("/home/js/common.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
