/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2024-12-18 08:41:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.home;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import co.kh.dev.home.model.CommentDAO;
import co.kh.dev.home.model.BoardDAO;
import co.kh.dev.home.model.BoardVO;
import java.util.ArrayList;
import co.kh.dev.common.MyUtility;
import co.kh.dev.home.model.CustomerVO;

public final class boardPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/home/footer.jsp", Long.valueOf(1733897706878L));
    _jspx_dependants.put("/home/headerNav.jsp", Long.valueOf(1734499137981L));
    _jspx_dependants.put("/home/css/commonCss.jsp", Long.valueOf(1734337424577L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(8);
    _jspx_imports_classes.add("co.kh.dev.home.model.CommentDAO");
    _jspx_imports_classes.add("co.kh.dev.common.MyUtility");
    _jspx_imports_classes.add("co.kh.dev.home.model.CustomerVO");
    _jspx_imports_classes.add("co.kh.dev.home.model.BoardVO");
    _jspx_imports_classes.add("co.kh.dev.home.model.BoardDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

CustomerVO cvo = MyUtility.returnCvoBySession(session);
CommentDAO cmDAO = CommentDAO.getInstance();
if (request.getAttribute("bList") == null) {//강제로 접근시 서블릿으로 보내는 기능
	response.sendRedirect("/jspHomePage/boardSelect.do");
	return;
}
ArrayList<BoardVO> bList = (ArrayList<BoardVO>) request.getAttribute("bList");
int viewTime = (int) request.getAttribute("viewTime");
int pageNum = (int) request.getAttribute("pageNum");
int pageStartNum = (int) request.getAttribute("pageStartNum");
int pageEndNum = (int) request.getAttribute("pageEndNum");
int pageCount = (int) request.getAttribute("pageCount");
String msg = (String) request.getAttribute("msg");
boolean alertFlag=(request.getAttribute("alertFlag")==null)?false:(boolean)request.getAttribute("alertFlag");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>메인 화면</title>\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/6ff644124c.js\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"");
      out.print(request.getContextPath());
      out.write("/home/css/carouselSection.css\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"");
      out.print(request.getContextPath());
      out.write("/home/css/common.css\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"");
      out.print(request.getContextPath());
      out.write("/home/css/headerNav.css\" />");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"");
      out.print(request.getContextPath());
      out.write("/home/css/boardPage.css\" />\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
if (alertFlag) {
      out.write("\r\n");
      out.write("alert(\"");
      out.print(msg);
      out.write("\"); \r\n");
      out.write("window.location.replace(\"");
      out.print(request.getContextPath());
      out.write("/home/boardPage.jsp\");\r\n");
}
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		<nav class=\"headerNav\">\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"headerNav\">\r\n");
      out.write("      <i class=\"fa-solid fa-cat\" onClick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/home/mainPage.jsp'\"></i>\r\n");
      out.write("	<ul class=\"mainMenu\">\r\n");
      out.write("		<li data-menu=\"one\">Item One</li>\r\n");
      out.write("		<li data-menu=\"two\">Item Two</li>\r\n");
      out.write("		<li data-menu=\"three\">Item Three</li>\r\n");
      out.write("		<li data-menu=\"four\">고객 지원</li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	");

  CustomerVO cvo2 = MyUtility.returnCvoBySession(session);
  if(cvo2==null){
  
      out.write("\r\n");
      out.write("	<button class=\"Button\" class=\"authButton\" onClick=\"openLoginPopup();\">로그인</button>\r\n");
      out.write("	");

  } else{
  
      out.write("\r\n");
      out.write("	<button class=\"Button\" class=\"authButton\" onClick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/home/logout.jsp'\">로그아웃</button>\r\n");
      out.write("	");

  }
  
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"subMenuContainer\">\r\n");
      out.write("	<ul class=\"subMenu\" data-submenu=\"one\">\r\n");
      out.write("		<li><a href=\"#\">Submenu 1</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu 2</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu 3</a></li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	<ul class=\"subMenu\" data-submenu=\"two\">\r\n");
      out.write("		<li><a href=\"#\">Submenu A</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu B</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu C</a></li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	<ul class=\"subMenu\" data-submenu=\"three\">\r\n");
      out.write("		<li><a href=\"#\">Submenu X</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu Y</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu Z</a></li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	<ul class=\"subMenu\" data-submenu=\"four\">\r\n");
      out.write("		<li><a href=\"");
      out.print(request.getContextPath());
      out.write("/boardSelect.do\">게시판</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu Beta</a></li>\r\n");
      out.write("		<li><a href=\"#\">Submenu Gamma</a></li>\r\n");
      out.write("	</ul>\r\n");
      out.write("</div>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/home/js/headerNav.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/home/js/common.js\"></script>");
      out.write("\r\n");
      out.write("		</nav>\r\n");
      out.write("	</header>\r\n");
      out.write("	<main class=\"boardPage\">\r\n");
      out.write("		<article class=\"article2\">\r\n");
      out.write("			<p class=\"notice\">- 본 게시판과 관련이 없거나 상업적인 내용, 특정인이나 특정사안을 비방하는 내용\r\n");
      out.write("				등은 예고없이 삭제될 수 있습니다.</p>\r\n");
      out.write("		</article>\r\n");
      out.write("		<article class=\"article3\">\r\n");
      out.write("			<div class=\"all\">\r\n");
      out.write("				<form method=\"get\" action=\"/jspHomePage/boardSelect.do\">\r\n");
      out.write("					<select name=\"viewTime\" id=\"view\">\r\n");
      out.write("						<option value=\"10\"\r\n");
      out.write("							");
      out.print((viewTime == 10) ? "selected='selected'" : "");
      out.write(">10개씩</option>\r\n");
      out.write("						<!-- viewTime에 맞춰서 select변경 -->\r\n");
      out.write("						<option value=\"20\"\r\n");
      out.write("							");
      out.print((viewTime == 20) ? "selected='selected'" : "");
      out.write(">20개씩</option>\r\n");
      out.write("						<!-- viewTime에 맞춰서 select변경 -->\r\n");
      out.write("					</select>\r\n");
      out.write("					<button type=\"submit\" id=\"BoardViewButton\">보기</button>\r\n");
      out.write("				</form>\r\n");
      out.write("				<form method=\"get\" action=\"/jspHomePage/boardFindSelect.do\">\r\n");
      out.write("					<select name=\"findValue\" id=\"find\">\r\n");
      out.write("						<option value=\"title\">제목</option>\r\n");
      out.write("						<option value=\"text\">내용</option>\r\n");
      out.write("					</select> <input type=\"text\" name=\"findText\" id=\"findText\" />\r\n");
      out.write("					<button type=\"submit\" id=\"findButton\">검색</button>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		</article>\r\n");
      out.write("		<article class=\"article4\">\r\n");
      out.write("			<table>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>번호</th>\r\n");
      out.write("					<th width=\"800\">제목</th>\r\n");
      out.write("					<th>작성자</th>\r\n");
      out.write("					<th>조회수</th>\r\n");
      out.write("					<th>등록일</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("				");

				for (BoardVO data : bList) {
				
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class=\"tbNum\">");
      out.print(data.getRownum());
      out.write("</td>\r\n");
      out.write("					<td class=\"tbMain\"><a\r\n");
      out.write("						href=\" ");
      out.print(request.getContextPath());
      out.write("/boardListSelect.do?no=");
      out.print(data.getNo());
      out.write("&count=1\">");
      out.print(data.getTitle());
      out.write("</a>&nbsp;&nbsp;\r\n");
      out.write("						[");
      out.print(data.getCommentNum());
      out.write("]</td>\r\n");
      out.write("					<td class=\"tbWriter\">");
      out.print(data.getCustomerId());
      out.write("</td>\r\n");
      out.write("					<td class=\"tbView\">");
      out.print(data.getCount());
      out.write("</td>\r\n");
      out.write("					<td class=\"tbDate\">");
      out.print(data.getSubdate());
      out.write("</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("\r\n");
      out.write("			</table>\r\n");
      out.write("		</article>\r\n");
      out.write("		<article class=\"article5\">\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li><i class=\"fa-solid fa-angles-left\"\r\n");
      out.write("					onclick=\"location.href='/jspHomePage/boardSelect.do?viewTime=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${viewTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&pageNum=1'\"></i></li>\r\n");
      out.write("				<li><i class=\"fa-solid fa-angle-left\"\r\n");
      out.write("					onclick=\"location.href='/jspHomePage/boardSelect.do?viewTime=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${viewTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&pageNum=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageNum - 1 < 0 ? 1 : pageNum - 1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\"></i></li>\r\n");
      out.write("				");

				for (int i = pageStartNum; i <= pageEndNum; i++) {
				
      out.write("\r\n");
      out.write("				<li ");
      out.print((pageNum == i) ? "class='active'" : "");
      out.write("\r\n");
      out.write("					onclick=\"location.href='/jspHomePage/boardSelect.do?viewTime=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${viewTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&pageNum=");
      out.print(i);
      out.write("'\">\r\n");
      out.write("					");
      out.print(i);
      out.write("\r\n");
      out.write("				</li>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("				<li><i class=\"fa-solid fa-chevron-right\"\r\n");
      out.write("					onclick=\"location.href='/jspHomePage/boardSelect.do?viewTime=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${viewTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&pageNum=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageNum + 1 > pageCount? pageCount : pageNum + 1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\"></i></li>\r\n");
      out.write("				<li><i class=\"fa-solid fa-angles-right\"\r\n");
      out.write("					onclick=\"location.href='/jspHomePage/boardSelect.do?viewTime=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${viewTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&pageNum=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\"></i></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("\r\n");
      out.write("			<form action=\"#\" method=\"get\" name=\"boardWrite.do\">\r\n");
      out.write("				<button type=\"button\" id=\"writeButton\" onclick=");
      out.print((cvo == null) ? "openLoginPopup()" : "location.href='/jspHomePage/home/boardWritePage.jsp';");
      out.write(">글쓰기</button>\r\n");
      out.write("			</form>\r\n");
      out.write("		</article>\r\n");
      out.write("	</main>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<footer>\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("      <article>\r\n");
      out.write("        <div><a href=\"#\">로그인 | </a><a href=\"#\">전체서비스 | </a><a href=\"#\">서비스안내 | </a><a href=\"#\">오류신고 | </a><a href=\"#\">고객센터 | </a></div>\r\n");
      out.write("        <div>직접 콘텐츠를 편집합니다.</div>\r\n");
      out.write("        <div>이 콘텐츠의 저작권은 저작권자 또는 제공처에 있으며, 이를 무단 이용하는 경우 저작권법 등에 따라 법적 책임을 질 수 있습니다.</div>\r\n");
      out.write("      </article>");
      out.write("\r\n");
      out.write("	</footer>\r\n");
      out.write("	<script src=\"");
      out.print(request.getContextPath());
      out.write("/home/js/common.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
